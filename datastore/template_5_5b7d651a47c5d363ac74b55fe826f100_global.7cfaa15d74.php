<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_cms_front_global extends \\IPS\\Theme\\Template\n{\n\tpublic $cache_key = '01e7aa016a7dd2866c5a24a66e21f7b8';\n\tfunction basicRelationship( $items ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nforeach ( $items as $id => $item ):\n$return .= <<<CONTENT\n\n\t<a class=\"ipsPages_csv\" href=\"\nCONTENT;\n$return .= htmlspecialchars( $item->url( \"getPrefComment\" ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $item->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction commentTableHeader( $comment, $record ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$iposted = $record->container()->contentPostedIn();\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n$idField = $record::$databaseColumnId;\n$return .= <<<CONTENT\n\n<div class='sm:ipsMargin_top:double'>\n\t<h3 class='ipsType_sectionHead ipsType_break'>\n\t\t\nCONTENT;\n\nif ( $record->unread() ):\n$return .= <<<CONTENT\n\n\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url( 'getNewComment' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'first_unread_post', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsTooltip>\n\t\t\t\t<span class='ipsItemStatus'><i class=\"fa \nCONTENT;\n\nif ( \\in_array( $record->$idField, $iposted ) ):\n$return .= <<<CONTENT\nfa-star\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfa-circle\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"><\/i><\/span>\n\t\t\t<\/a>&nbsp;\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( \\in_array( $record->$idField, $iposted ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span class='ipsItemStatus ipsItemStatus_read ipsItemStatus_posted'><i class=\"fa fa-star\"><\/i><\/span>&nbsp;\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack( 'content_db_lang_sl_' . $record::$customDatabaseId, FALSE ), $record->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'view_this_cmsrecord', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $record->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\nCONTENT;\n\nif ( $record->container()->allow_rating ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'front' )->rating( 'large', $record->rating_hits ? ( $record->rating_total \/ $record->rating_hits ) : 0 );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/h3>\n\t<p class='ipsType_normal ipsType_light ipsType_blendLinks ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'in', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $record->container()->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $record->container()->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a><\/p>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction embedRecord( $item, $url ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\n$image = NULL;\n$return .= <<<CONTENT\n\n<div data-embedInfo-maxSize='\nCONTENT;\n\nif ( \\IPS\\Settings::i()->max_internalembed_width ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->max_internalembed_width;\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n100%\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsRichEmbed'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"embed\", \"core\" )->embedHeader( $item, $item->mapped('title'), $item->mapped('date'), $url );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $item->record_image ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$image = \\IPS\\File::get( \"cms_Records\", $item->record_image );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelseif ( $contentImage = $item->contentImages(1) ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$attachType = key( $contentImage[0] );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$image = \\IPS\\File::get( $attachType, $contentImage[0][ $attachType ] );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\nCONTENT;\n\nif ( $image ):\n$return .= <<<CONTENT\n\n\t\t<div class='ipsRichEmbed_masthead ipsRichEmbed_mastheadBg ipsType_center'>\n\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' style='background-image: url( \"\nCONTENT;\n\n$return .= htmlspecialchars( str_replace( array( '(', ')' ), array( '\\(', '\\)' ), $image->url ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" )'>\n\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $image->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsHide' alt=''>\n\t\t\t<\/a>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div class='ipsPadding'>\n\t\t<div class='ipsType_richText ipsType_medium' data-truncate='3'>\n\t\t\t{$item->truncated(TRUE)}\n\t\t<\/div>\n\n\t\t\nCONTENT;\n\nif ( \\count( $item->customFieldsForDisplay('listing') ) ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsSpacer_top ipsSpacer_half ipsClearfix'>\n\t\t\t\t\nCONTENT;\n\nforeach ( $item->customFieldsForDisplay('listing') as $fieldId => $fieldValue ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $fieldValue ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$fieldValue}\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"embed\", \"core\" )->embedItemStats( $item, $item::database()->options['comments'] );\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction embedRecordComment( $comment, $item, $url ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div data-embedInfo-maxSize='\nCONTENT;\n\nif ( \\IPS\\Settings::i()->max_internalembed_width ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->max_internalembed_width;\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n100%\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsRichEmbed'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"embed\", \"core\" )->embedHeader( $comment, $item->mapped('title'), $comment->mapped('date'), $url );\n$return .= <<<CONTENT\n\n\t<div class='ipsPadding'>\n\t\t<div class='ipsRichEmbed_originalItem ipsAreaBackground_reset ipsSpacer_bottom ipsType_blendLinks'>\n\t\t\t<div>\n\t\t\t\t\nCONTENT;\n\nif ( $item->record_image ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$image = \\IPS\\File::get( \"cms_Records\", $item->record_image );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelseif ( $contentImage = $item->contentImages(1) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$attachType = key( $contentImage[0] );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$image = \\IPS\\File::get( $attachType, $contentImage[0][ $attachType ] );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\nCONTENT;\n\nif ( $image ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsRichEmbed_masthead ipsRichEmbed_mastheadBg ipsType_center'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' style='background-image: url( \"\nCONTENT;\n\n$return .= htmlspecialchars( str_replace( array( '(', ')' ), array( '\\(', '\\)' ), $image->url ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" )'>\n\t\t\t\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $image->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsHide' alt=''>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsPadding'>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"embed\", \"core\" )->embedOriginalItem( $item, TRUE, \\IPS\\Theme::i()->getTemplate( 'global', 'cms' )->embedRecordItemSnippet( $item )  );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\n\t\t<div class='ipsType_richText ipsType_medium' data-truncate='3'>\n\t\t\t{$comment->truncated(TRUE)}\n\t\t<\/div>\n\n\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->reputation_enabled and \\IPS\\IPS::classUsesTrait( $comment, 'IPS\\Content\\Reactable' ) and \\count( $comment->reactions() ) ):\n$return .= <<<CONTENT\n\n\t\t\t<ul class='ipsList_inline ipsSpacer_top ipsSpacer_half'>\n\t\t\t\t<li>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->reactionOverview( $comment, TRUE, 'small' );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction embedRecordItemSnippet( $item ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( \\count( $item->customFieldsForDisplay('listing') ) ):\n$return .= <<<CONTENT\n\n\t<div class='ipsSpacer_top ipsSpacer_half ipsClearfix'>\n\t\t\nCONTENT;\n\nforeach ( $item->customFieldsForDisplay('listing') as $fieldId => $fieldValue ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $fieldValue ):\n$return .= <<<CONTENT\n\n\t\t\t\t{$fieldValue}\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction embedRecordReview( $comment, $item, $url ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div data-embedInfo-maxSize='\nCONTENT;\n\nif ( \\IPS\\Settings::i()->max_internalembed_width ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->max_internalembed_width;\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n100%\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsRichEmbed'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"embed\", \"core\" )->embedHeader( $comment, $item->mapped('title'), $comment->mapped('date'), $url );\n$return .= <<<CONTENT\n\n\t<div class='ipsPadding'>\n\t\t<div class='ipsRichEmbed_originalItem ipsAreaBackground_reset ipsSpacer_bottom ipsType_blendLinks'>\n\t\t\t<div>\n\t\t\t\t\nCONTENT;\n\nif ( $item->record_image ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$image = \\IPS\\File::get( \"cms_Records\", $item->record_image );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelseif ( $contentImage = $item->contentImages(1) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$attachType = key( $contentImage[0] );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$image = \\IPS\\File::get( $attachType, $contentImage[0][ $attachType ] );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\nCONTENT;\n\nif ( $image ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsRichEmbed_masthead ipsRichEmbed_mastheadBg ipsType_center'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' style='background-image: url( \"\nCONTENT;\n\n$return .= htmlspecialchars( str_replace( array( '(', ')' ), array( '\\(', '\\)' ), $image->url ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" )'>\n\t\t\t\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $image->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsHide' alt=''>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsPadding'>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"embed\", \"core\" )->embedOriginalItem( $item, TRUE, \\IPS\\Theme::i()->getTemplate( 'global', 'cms' )->embedRecordItemSnippet( $item )  );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->rating( 'veryLarge', $comment->mapped('rating') );\n$return .= <<<CONTENT\n \n\t\t\nCONTENT;\n\nif ( $comment->mapped('votes_total') ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset ipsType_medium'>{$comment->helpfulLine()}<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<hr class='ipsHr'>\n\t\t<div class='ipsType_richText ipsType_medium ipsSpacer_top ipsSpacer_half' data-truncate='3'>\n\t\t\t{$comment->truncated(TRUE)}\n\t\t<\/div>\n\n\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->reputation_enabled and \\IPS\\IPS::classUsesTrait( $comment, 'IPS\\Content\\Reactable' ) and \\count( $comment->reactions() ) ):\n$return .= <<<CONTENT\n\n\t\t\t<ul class='ipsList_inline ipsSpacer_top ipsSpacer_half'>\n\t\t\t\t<li>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->reactionOverview( $comment, TRUE, 'small' );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction recordResultSnippet( $indexData, $itemData, $url, $condensed ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $condensed ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $itemData['record_image'] ):\n$return .= <<<CONTENT\n\n\t\t<span class='ipsThumb_bg ipsThumb_small ipsPos_left' style='background-image: url(\"\nCONTENT;\n\n$return .= \\IPS\\File::get( \"cms_Records\", $itemData['record_image'] )->url;\n$return .= <<<CONTENT\n\")'>\n\t\t\t<img src='\nCONTENT;\n\n$return .= \\IPS\\File::get( \"cms_Records\", $itemData['record_image'] )->url;\n$return .= <<<CONTENT\n' alt='\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_title'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class=\"\">\n\t\t<\/span>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<div class='\nCONTENT;\n\nif ( $itemData['record_image'] ):\n$return .= <<<CONTENT\nipsColumns ipsColumns_collapsePhone\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\nCONTENT;\n\nif ( $itemData['record_image'] ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsColumn ipsColumn_medium'>\n\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'front' )->thumbImage( $itemData['record_image'], $indexData['index_title'], 'large', '', 'view_this', NULL, 'cms_Records' );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/a>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $itemData['record_image'] ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsColumn ipsColumn_fluid ipsStream_snippetInfo'>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( trim( $indexData['index_content'] ) !== '' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsSpacer_top ipsSpacer_half ipsType_richText ipsType_break ipsType_medium' \nCONTENT;\n\nif ( !( \\IPS\\Dispatcher::i()->application->directory == 'core' and \\IPS\\Dispatcher::i()->module and \\IPS\\Dispatcher::i()->module->key == 'search' ) ):\n$return .= <<<CONTENT\ndata-ipsTruncate data-ipsTruncate-type='remove' data-ipsTruncate-size='2 lines' data-ipsTruncate-watch='false'\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ndata-searchable data-findTerm\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Content\\Search\\Result::preDisplay( $indexData['index_content'] );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $itemData['record_image'] ):\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction uploadDisplay( $file, $record, $downloadUrl, $cipher ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $file->isImage() ):\n$return .= <<<CONTENT\n\n\t<img src=\"\nCONTENT;\n$return .= htmlspecialchars( $file->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsImage\" data-ipsLightbox>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $record ):\n$return .= <<<CONTENT\n\n\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"applications\/cms\/interface\/file\/file.php?record={$record->_id}&database={$record::$customDatabaseId}&fileKey={$cipher}&file=\", \"none\", \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= htmlspecialchars( urlencode($file->originalFilename), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $file->originalFilename, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $downloadUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $file->originalFilename, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
